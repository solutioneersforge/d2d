CREATE TABLE [Receipt].[Receipts] (
    [ReceiptId]       UNIQUEIDENTIFIER CONSTRAINT [DF_Receipts_ReceiptID] DEFAULT (newid()) NOT NULL,
    [UserId]          UNIQUEIDENTIFIER NOT NULL,
    [ReceiptNumber]   NVARCHAR (50)    NULL,
    [ReceiptDate]     DATETIME         NOT NULL,
    [MerchantId]      INT              NULL,
    [CountryId]       INT              NOT NULL,
    [PaymentTypeId]   INT              NOT NULL,
    [CurrencyId]      INT              NOT NULL,
    [TotalAmount]     DECIMAL (18, 2)  NULL,
    [Discount]        DECIMAL (18, 2)  NULL,
    [SubTotal]        DECIMAL (18, 2)  NULL,
    [ServiceCharge]   DECIMAL (18, 2)  NULL,
    [OtherCharge]     DECIMAL (18, 2)  NULL,
    [TaxAmount]       DECIMAL (18, 2)  NULL,
    [CreatedOn]       DATETIME         NOT NULL,
    [UpdatedOn]       DATETIME         NULL,
    [StatusId]        INT              NOT NULL,
    [CustomerName]    NVARCHAR (150)   NULL,
    [CustomerPhone]   NVARCHAR (50)    NULL,
    [CustomerAddress] NVARCHAR (500)   NULL,
    [ModifiedBy]      UNIQUEIDENTIFIER NULL,
    [ApprovedBy]      UNIQUEIDENTIFIER NULL,
    [ApprovedOn]      DATETIME         NULL,
    CONSTRAINT [PK_Receipts] PRIMARY KEY CLUSTERED ([ReceiptId] ASC),
    CONSTRAINT [FK_Receipts_Countries] FOREIGN KEY ([CountryId]) REFERENCES [Common].[Countries] ([CountryId]),
    CONSTRAINT [FK_Receipts_Currencies] FOREIGN KEY ([CurrencyId]) REFERENCES [Common].[Currencies] ([CurrencyId]),
    CONSTRAINT [FK_Receipts_Merchants] FOREIGN KEY ([MerchantId]) REFERENCES [Common].[Merchants] ([MerchantId]),
    CONSTRAINT [FK_Receipts_PaymentTypes] FOREIGN KEY ([PaymentTypeId]) REFERENCES [Common].[PaymentTypes] ([PaymentTypeId]),
    CONSTRAINT [FK_Receipts_Receipts] FOREIGN KEY ([ReceiptId]) REFERENCES [Receipt].[Receipts] ([ReceiptId]),
    CONSTRAINT [FK_Receipts_Status] FOREIGN KEY ([StatusId]) REFERENCES [Common].[Status] ([StatusId]),
    CONSTRAINT [FK_Receipts_Users] FOREIGN KEY ([UserId]) REFERENCES [Authentication].[Users] ([UserId])
);

